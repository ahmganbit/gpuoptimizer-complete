# Environment Configuration Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# OPTIMIZED 3-GATEWAY WORLDWIDE PAYMENT SYSTEM
# =============================================================================

# üåç Gateway 1: NOWPayments - Crypto (works everywhere, no restrictions)
# Sign up: https://nowpayments.io ‚Üí Dashboard ‚Üí API Keys
NOWPAYMENTS_API_KEY=your_nowpayments_api_key_here
NOWPAYMENTS_IPN_SECRET=your_ipn_secret_key_here

# üåç Gateway 2: Flutterwave - Traditional payments (Africa, Europe, Americas)
# Sign up: https://dashboard.flutterwave.com ‚Üí Settings ‚Üí API Keys
FLUTTERWAVE_SECRET_KEY=FLWSECK_TEST-your_secret_key_here
FLUTTERWAVE_PUBLIC_KEY=FLWPUBK_TEST-your_public_key_here

# üåç Gateway 3: Paddle - Professional SaaS billing (worldwide)
# Sign up: https://vendors.paddle.com ‚Üí Developer Tools ‚Üí Authentication
PADDLE_VENDOR_ID=your_paddle_vendor_id
PADDLE_VENDOR_AUTH_CODE=your_paddle_auth_code

# üí° This 3-gateway setup covers 100% of the world with optimal fees

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# SMTP settings for email notifications
SENDER_EMAIL=noreply@yourdomain.com
SENDER_PASSWORD=your_app_password_here
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587

# Alternative: SendGrid (recommended for production)
# SENDGRID_API_KEY=your_sendgrid_api_key_here

# =============================================================================
# CUSTOMER ACQUISITION SETTINGS
# =============================================================================

# GitHub API for lead generation
# Create token at: https://github.com/settings/tokens
GITHUB_TOKEN=ghp_your_github_personal_access_token

# Reddit API (optional)
# Create app at: https://www.reddit.com/prefs/apps
REDDIT_CLIENT_ID=your_reddit_client_id
REDDIT_CLIENT_SECRET=your_reddit_client_secret
REDDIT_USER_AGENT=GPUOptimizer:v1.0 (by /u/yourusername)

# Twitter API (optional)
# Get from: https://developer.twitter.com/en/portal/dashboard
TWITTER_BEARER_TOKEN=your_twitter_bearer_token

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Base URL for your application (used in emails and webhooks)
BASE_URL=https://yourdomain.com

# Flask secret key (generate a secure random string)
SECRET_KEY=your_flask_secret_key_here_make_it_long_and_random

# JWT secret for API authentication
JWT_SECRET_KEY=your_jwt_secret_for_api_auth

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# SQLite (default - good for development and small deployments)
DATABASE_URL=sqlite:///revenue.db
LEADS_DATABASE_URL=sqlite:///leads.db

# PostgreSQL (recommended for production)
# DATABASE_URL=postgresql://username:password@localhost:5432/gpu_optimizer
# LEADS_DATABASE_URL=postgresql://username:password@localhost:5432/gpu_optimizer_leads

# MySQL (alternative for production)
# DATABASE_URL=mysql://username:password@localhost:3306/gpu_optimizer
# LEADS_DATABASE_URL=mysql://username:password@localhost:3306/gpu_optimizer_leads

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Rate limiting (requests per time period)
RATE_LIMIT_STORAGE_URL=redis://localhost:6379
DEFAULT_RATE_LIMIT=200 per day, 50 per hour

# CORS settings (comma-separated origins)
CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path
LOG_FILE=gpu_optimizer.log

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your_sentry_dsn_here

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Set to 'true' for development mode
FLASK_DEBUG=false

# Set to 'development' for development environment
FLASK_ENV=production

# =============================================================================
# DEPLOYMENT SETTINGS
# =============================================================================

# Port for the application to run on
PORT=5000

# Number of worker processes (for Gunicorn)
WORKERS=4

# Worker timeout (seconds)
WORKER_TIMEOUT=30

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable autonomous customer acquisition
ENABLE_ACQUISITION=true

# Enable/disable email notifications
ENABLE_EMAIL_NOTIFICATIONS=true

# Enable/disable webhook processing
ENABLE_WEBHOOKS=true

# Enable/disable GPU monitoring
ENABLE_GPU_MONITORING=true

